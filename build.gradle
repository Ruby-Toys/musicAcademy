plugins {
    id 'org.springframework.boot' version '2.7.3'
    id 'java'
    id "org.asciidoctor.jvm.convert" version "3.3.2"
}

repositories {
    mavenCentral()
}

bootJar.enabled = false

subprojects {
    group = 'ruby'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '11'

    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
        // lombok
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
    }

    test {
        useJUnitPlatform()
    }
}

project(":core") {
    bootJar.enabled = false
    jar.enabled = true

    dependencies {
        // mysql
        runtimeOnly 'mysql:mysql-connector-java'
        // jpa
        api 'org.springframework.boot:spring-boot-starter-data-jpa'
        // querydsl
        implementation 'com.querydsl:querydsl-core'
        api 'com.querydsl:querydsl-jpa'
        annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"
        annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
        annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
    }
}

project(":api") {
    configurations {
        asciidoctorExt
    }

    ext {
        set('snippetsDir', file("build/generated-snippets"))
    }

    test {
        outputs.dir snippetsDir
    }

    asciidoctor {
        inputs.dir snippetsDir
        configurations 'asciidoctorExt'
        dependsOn test
    }

    bootJar {
        dependsOn asciidoctor

        copy {
            from asciidoctor.outputDir
            into "src/main/resources/static/docs"
        }
    }

    dependencies {
        implementation project(':core')
        // web
        implementation 'org.springframework.boot:spring-boot-starter-web'
        // validation
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        // modelMapper
        implementation 'org.modelmapper:modelmapper:3.1.0'
        // security
        implementation 'org.springframework.boot:spring-boot-starter-security'
        testImplementation 'org.springframework.security:spring-security-test'
        // email
        implementation 'org.springframework.boot:spring-boot-starter-mail'
        implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
        // rest docs
        asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
        testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    }
}